#!/bin/sh
# Version: 3

# https://techbase.kde.org/Development/Tutorials/Localization/i18n_Build_Systems
# Based on: https://github.com/psifidotos/nowdock-plasmoid/blob/master/po/Messages.sh

DIR=`cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd`
plasmoidName=`kreadconfig5 --file="$DIR/../metadata.desktop" --group="Desktop Entry" --key="X-KDE-PluginInfo-Name"`
widgetName="${plasmoidName##*.}" # Strip namespace
website=`kreadconfig5 --file="$DIR/../metadata.desktop" --group="Desktop Entry" --key="X-KDE-PluginInfo-Website"`
bugAddress="$website"
packageRoot=".." # Root of translatable sources
projectName="plasma_applet_${plasmoidName}" # project name

#---
otherWidgetList="$@"

if [ -z "${otherWidgetList}" ]; then
	echo "./sync [widgetDir]"
	echo "./sync [widgetDir] [widgetDir] ..."
	echo "This script will run msgcat with po files from other widgets."
	echo "It'll also run msgattrib --no-obsolete to filter unused messages."
	echo ""
	echo "[widgetDir] must be a sibling folder of the project root."
	echo " * [widgetDir]/"
	echo " * thiswidget/"
	echo "   * package/"
	echo "     * translate/"
	echo "       * ./sync"
	exit 1
fi

for otherWidgetName in $otherWidgetList; do
	echo "[sync] OtherWidget: ${otherWidgetName}"
done


#---
if [ -z "$plasmoidName" ]; then
	echo "[sync] Error: Couldn't read plasmoidName."
	exit
fi

if [ -z "$(which xgettext)" ]; then
	echo "[sync] Error: xgettext command not found. Need to install gettext"
	echo "[sync] Running 'sudo apt install gettext'"
	sudo apt install gettext
	echo "[sync] gettext installation should be finished. Going back to merging translations."
fi


#---
echo "[sync] Merging messages"
catalogs=`find . -name '*.po' | sort`
for cat in $catalogs; do
	echo "[sync] $cat"
	catLocale=`basename ${cat%.*}`

	widthArg=""
	catUsesGenerator=`grep "X-Generator:" "$cat"`
	if [ -z "$catUsesGenerator" ]; then
		widthArg="--width=400"
	fi

	cp "$cat" "$cat.new"
	sed -i 's/"Content-Type: text\/plain; charset=CHARSET\\n"/"Content-Type: text\/plain; charset=UTF-8\\n"/' "$cat.new"

	for otherWidgetName in $otherWidgetList; do
		otherWidgetCat="${DIR}/../../../${otherWidgetName}/package/translate/${cat}"
		if [ -f "${otherWidgetCat}" ]; then
			msgcat \
				${widthArg} \
				--add-location=file \
				--use-first \
				-o "$cat.new" \
				"$cat.new" "${otherWidgetCat}"
		else
			echo "[sync]     Not found '${otherWidgetName}/package/translate/${cat}'"
		fi
	done

	msgmerge \
		${widthArg} \
		--add-location=file \
		--no-fuzzy-matching \
		-o "$cat.new" \
		"$cat.new" "${DIR}/template.pot"

	msgattrib \
		${widthArg} \
		--no-obsolete \
		-o "$cat.new" \
		"$cat.new"


	sed -i 's/# SOME DESCRIPTIVE TITLE./'"# Translation of ${widgetName} in ${catLocale}"'/' "$cat.new"
	sed -i 's/# Translation of '"${widgetName}"' in LANGUAGE/'"# Translation of ${widgetName} in ${catLocale}"'/' "$cat.new"
	sed -i 's/# Copyright (C) YEAR THE PACKAGE'"'"'S COPYRIGHT HOLDER/'"# Copyright (C) $(date +%Y)"'/' "$cat.new"

	# mv "$cat" "$cat.old"
	mv "$cat.new" "$cat"
done

echo "[sync] Done syncing messages"
